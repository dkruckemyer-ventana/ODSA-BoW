Title         : Bunch of Wires PHY Specification
Subtitle      : The Open Domain-Specific Architecture BoW Workstream
Author        :  
Logo          : True

Heading depth: 5
Document Class: [11pt]article
Package: [top=1in, bottom=1.25in, left=1in, right=1in]geometry
Package: fancyhdr

title,titlenote,titlefooter,h1,h2,h3,h4,h5 {
  font-weight: bold;
}

~center
![bowspec_logo]

[bowspec_logo]: images/bowspec_logo.jpg "bowspec_logo" { width:auto; max-width:90% }
~

[TITLE]

~ center
DRAFT
~



This document is a draft and not an approved specification. It is to be released under 
the following OCP copyright release when completed and approved:

{ page-break-after: always }

~center
COPYRIGHT LICENSE AGREEMENT
~

This Agreement (“Agreement”) is entered into on the date set forth below, 
(the “Effective Date”) by and between the Open Compute Project Foundation a 
Delaware corporation (“OCP”) and the entity identified below (“Licensor”).

WHEREAS, Licensor is the owner of and/or has certain rights in or to the 
works of authorship identified in the attached Exhibits (collectively, the “Work”).

WHEREAS, OCP desires to copy, distribute, make derivative works of and publish 
the Work and derivate works thereof, including without limitation in one or more 
OCP publications and/or on OCP’s website, and Licensor will benefit from OCP’s 
use of the Work as described in this Agreement.

NOW THEREFORE, in consideration of the promises in this Agreement, the parties 
agree as follows:

1.     Structure of the Agreement. There may be multiple Exhibits to this Agreement. 
Each Exhibit will be signed by an authorized representative and will be governed by 
and subject to the terms set forth in this Agreement, with the licenses applicable 
to the Work described therein effective as of the date the Exhibit is signed.

2.     License. Licensor hereby grants to OCP a non-exclusive, transferable (in 
accordance with Section 7 below), royalty free, fully-paid, perpetual, irrevocable, 
worldwide license, under Licensor’s copyrights in the Work, with the right to sublicense, 
to use, reproduce, create derivative works, distribute, and publicly display and 
perform the Work and derivative works thereof, in whole or in part, as a separate 
work or as part of a collective work. The foregoing will apply to all mediums now 
known or hereafter existing.

3.     Ownership of the Work / Other Rights Reserved. Except for the foregoing 
license, as between OCP and Licensor, Licensor retains all right, title and interest 
in and to the Work and all intellectual property rights therein. Licensor hereby 
reserves all rights not expressly granted in this Agreement. No additional licenses 
or rights whatsoever (including without limitation any patent licenses) are granted 
by implication, exhaustion, estoppel or otherwise.

4.     Representations and Indemnification. Licensor represents to OCP that: (i) Licensor 
is the sole and exclusive owner of the Work and all copyrights therein or Licensor has 
the right and authority to grant the licenses set forth in this Agreement and (ii) OCP’s 
exercise of the licenses set forth in this Agreement will not result in any infringement 
of any third party’s copyrights or the misappropriation of any third party’s trade secrets. 
Licensor agrees to indemnify and hold OCP harmless from and against any losses, damages, 
liabilities, settlement amount, costs and expenses (including reasonable attorneys’ fees) 
incurred by OCP in connection with any breach of the foregoing representations. This 
Section will survive the termination of this Agreement.

5.     Term and Termination. This Agreement will commence on the Effective Date and will 
terminate upon the written agreement of the parties or by written notice by OCP.

6.     Governing Law and Forum. This Agreement shall be solely and exclusively governed, 
construed and enforced in accordance with the laws of the Texas, USA, without reference 
to conflict of laws principles. Any suit, action or proceeding arising from or relating 
to this Agreement must be brought, solely and exclusively, in courts located in Travis 
County, Texas and each party irrevocably consents to the jurisdiction and venue of any 
such court.

7.     Assignment. OCP may assign this Agreement (a) with the consent of Licensor, not 
to be unreasonably withheld or delayed, or (b) upon notice, but without such consent, in 
connection with a merger, acquisition, change of control, or sale of substantially all 
the assets of OCP. This Agreement shall be binding upon and inure to the benefit of the 
parties and their successors and permitted assigns.

8.     Mutual Limits on Liability. Except as set forth below, in no event shall either 
party be liable to the other party in any manner, under any theory of liability, whether 
in contract, tort (including negligence), or other theory, for any indirect, consequential, 
incidental, exemplary, punitive, statutory or special damages, including lost profits, 
regardless of whether such party was advised of or was aware of the possibility of such 
damages. Except as set forth below, in no event shall the total, cumulative liability 
of either party regarding any and all claims and causes of action, under any theory of 
liability, whether in contract, tort (including negligence), or otherwise, exceed One 
Thousand Dollars ($1,000). The limitations set forth in this Section will not apply to 
liability arising under Section 4 (Representations and Indemnification) above. This 
Section will survive termination of this Agreement.

9.     Entire Agreement. This Agreement constitutes the entire agreement between the 
parties with respect to its subject matter and it supersedes all prior or contemporaneous 
oral or written agreements and representations concerning the subject matter herein. This 
Agreement may be amended only in a written document signed by both parties. This Agreement 
shall not be interpreted or construed against the party preparing it.
10.  Counterparts and Facsimile Signatures. This Agreement may be executed in counterparts 
all of which taken together shall constitute one single agreement between the parties. A 
facsimile transmission of the executed signature page of this Agreement shall constitute 
due and proper execution of this Agreement by the applicable party.
{ page-break-after: always }

[TOC]

[TITLE]

# Introduction 
The Bunch of Wires (BoW) is a simple, open and interoperable 
physical interface between two chiplets or chip-scale-packages (CSP) 
in a common package. This document specifies the BoW interface PHY layer.


## Objectives
The BoW interface is a set of die-to-die parallel 
interfaces that provides the flexibility to trade off throughput/chipedge for 
design complexity, cost, and packaging technology. 

The use of BoW is expected to be confined to connect die
placed close to one another within the same package. 
In this environment, signal attenuation is small and the interface can be simple.

The definition of the BoW interface aims to meet the following design 
objectives:

* Inexpensive to implement 
* Portable across IC process nodes ranging from 65 nm to 5 nm
* Flexible to support both existing and advancing packaging technologies
* Portable across multiple bump pitches
* Unencumbered by technology license costs
* Very low power (< 1 pJ/bit) as defined by Tx IO Pad, wire and Rx IO Pad.
* Very low latency (<5 ns without FEC, <15 ns with FEC from link layer to link layer)
* High throughput density (100-1000 Gb/s/mm-chip-edge)
* Backwards compatible (across at least two major specification versions)

## Advantages

The Bunch of Wires interface provides several key advantages for chiplet-based systems:

* Can operate at higher data rates per pin than existing parallel standards 
  * or at lower data rates for compatibility with existing parallel standards
* Can be implemented in legacy technologies (process nodes) with generally available IP
* Can be implemented in low-cost laminates or higher-density silicon-based interconnect
* Can be implemented with much less design effort than a traditional SERDES
* Is not constrained to a specific bump pitch
  * interfaces with somewhat different bump pitches can be connected

Compared to serdes, BoW uses a lower data rate/wire and so it requires more wires. 
But the lower data rates allow use of single-ended signaling and denser wire packing.
In addition, in laminates, BoW can take advantage of multiple wiring layers and in advanced packaging
it can take advantage of the much-increased wire density.

## Scope
The scope of this document has several levels.

1. The specification of the BoW interface includes these requirements:
  a. Operating modes
  b. Chip-to-chip wire signals
  c. Wire ordering
  c. Timing and electrical specifications on the chip-to-chip interface
  d. Signals at the link layer interface
  e. Configuration, initialization, calibration
  f. Functions that must be supported at the link layer or above

1. The specification includes recommendations for these elements:
  a. Bump patterns
  b. Arrangement of multiple slices in a link
  c. Arrangement of wires in laminate and advanced packaging
  a. signal integrity of the wire channel
  d. Configuration and management programming
  e. Design for test and test methods
  f. Performance estimates
  e. Compliance verification

1. The following activities are outside the scope of this document:
  a. Specific implementations of the interface
  a. Integration of the interface with system-level data flow e.g. interface to a 
   PHY-layer abstraction such as PIPE/PCIe interface to the BoW
  a. The use of this interface outside of a package or entirely inside a chip
  a. Definition of protocols for logical data transfer

1. The following aspects are intended to be addressed in subsequent versions 
of this specification:
  a. Simultaneous bidirectional data (full duplex on each wire)
  a. Security

## Language
* "Shall" or "must" indicates a requirement.
Failure to meet the requirement results in non-compliance
* "Should" indicates a strong suggestion, but not a requirement.
Failure to implement the suggestion does not result in non-compliance.
* "May" indicates an implementation option.
* The lack of one of the above verbs indicates the material is informative.
* "Reference" indicates a reference design that is provided as example for explanation, 
but is not a requirement.

<XX
Note to spec writers: 
Avoid using more than one of the above specification verbs in a single sentence to avoid confusion. 
XX>

## Compliance Summary

The specifications must be met over process variation, supply voltage range and 
temperature range (PVT). 
Each implementation must document its supported supply voltage range and temperature range.

Table XX will summarize the compliance points that shall be met in order to comply 
with the BoW specification. Each of the 
compliance points is discussed in the specification.



Table [#tab-compliance] below summarizes these signals.
~ Framed {color: blue}
Todo: Need to fill in this table:
~

~ TableFigure {#tab-compliance; caption: "BoW Compliance Summary"; }
+---------+------------------------------+
| Section | Description                  |
+---------+------------------------------+
| 2.3     | BoW Modes                    |
| 3.1     | Chip to chip signals (wires) |
| [#sec-bow-components] | Wire order                   |
|         |                  Much more....            |
+---------+------------------------------+
~

~ Framed {color: blue}
Do we also need a discussion of interoperability?
~


# BoW Overview
This section provides an overview of the BoW physical 
interface (PHY) and its use in a multi-chiplet design.

## BoW Slice
BoW is an energy-efficient, easy-to-use PHY
interface between a pair of die inside a single package 
as shown in Figure [#fig-bow_overview2].
The BoW PHY is defined as a single unidirectional slice. 
Multiple slices are combined to create links of the desired throughput.
A link may be symmetric, asymmetric or unidirectional.
The BoW PHYs between two die are physically
connected through wires on a substrate or interposer. 
A BoW PHY does not have enough drive strength for off-package interfaces,
nor is it designed for buses that are entirely on die.

This document specifies the protocol for a BoW PHY slice. The aggregation
of multiple PHYs into a link is beyond the scope of this document.


~ Figure { #fig-bow_overview2; caption: "BoW Overview" }
![bow_overview2]
[bow_overview2]: images/Bow-link-PHY-wires2.png { width:auto; max-width:70% }
~

<xx
~ Figure { #fig-bow_overview; caption: "BoW Overview" }
![bow_overview]
[bow_overview]: images/bowspec_figintro.jpg { width:auto; max-width:70% }
~
XX>

A BoW PHY slice either transmits or receives 16 bits of data between die. 
The BoW is a source-synchronous PHY and each transmitting
PHY slice transmits a complementary clock signal CLK+ and CLK- with the data.
A BoW PHY optionally has two additional wires designated 
FEC (for Forward Error Correction) and 
AUX, for other optional functions such as Data Bus Inversion (DBI). 

## BoW Wires
Within the package, the BoW datapath is transported on physical passive wires between 
the pair of connected die. The specifics of the wires, such as their density,
maximum length, impedence characteristics and how they are realized vary with
the packaging technology. In order to minimize power, unterminated and source-terminated
links will have short reaches requiring chips to be adjacent.

## BoW Modes

A BoW PHY must operate in one of the Bow Modes listed in ascending order in Table [#tab-levels].
A BoW Mode defines the speed of clock and data of the PHY on the die-to-die wires.
In all modes, the data must be clocked DDR: 
the chip-to-chip data wire bit rate is double the clock wire frequency.
All BoW interfaces must be able to interoperate with all the lower modes.
Supporting rates other than the defined four modes is an implementation choice.
There is more detail on BoW Modes in section [#sec-bow-modes].
~ TableFigure {#tab-levels; caption: "BoW Levels"; }
+----------+----------------+---------------+-------+
|BoW Mode | Slice Bit Rate | Wire Bit Rate | TxClk |
|          | Gb/s           | Gb/s/wire     | GHz   |
+----------+----------------+---------------+-------+
| BoW-32   | 32             | 2             | 1     |
| BoW-64   | 64             | 4             | 2     |
| BoW-128  | 128            | 8             | 4     |
| BoW-256  | 256            | 16            | 8     |
+----------+----------------+---------------+-------+
~


~ Figure {#fig-bowspec_tradeoff2; caption: "BoW Data Rate vs. Reach tradeoff"}
![bowspec_figtradeoff2]
[bowspec_figtradeoff2]: images/Bow-tradeoff2.png {width:auto; max-width:70% }
~

Figure [#fig-bowspec_tradeoff2] shows the tradeoff between package, data rate, termination,
and reach. 
Source-terminated BoW on laminate allows a longer reach than advanced packaging, 
but the wider design rules in laminate means that both of these cases are barely able to 
reach 8 Gb/s/wire.
A doubly-terminated link offers longer distances and higher rates, but 
requires a more complicated receiver design.

## PHY - Link Layer Interface
Figure [#fig-bow-logicin] shows the interface between a BoW slice and the digital link
layer logic in a chip. The speed at the link layer interface (Figure [#fig-bow_overview2]) 
is implementation-dependent. Typically, PCLK will be the TxClk frequency divided by a 
power of 2, so 250, 500 and 1000 MHz are common rates. The data at the link layer 
interface is SDR (bit rate equal to PCLK frequency).


~ Figure {#fig-bow-logicin; caption: "BoW slice logic interface"}
![bowspec_figslicelogicint]
~
[bowspec_figslicelogicint]: images/fig-bowphylogicint.jpg {width:auto; max-width: 100%}


# Signal Definitions

This section specifies the control data signals into and out of device logic and package
for BoW Rx and Tx slices. 

## Die-to-die Signals (Wires)

As shown in Figure [#fig-bow_overview2],
each BoW slice consists of a differential clock pair, 
16 single-ended data wires, and optional an optional pair of wires FEC and AUX.

Each BoW slice is unidirectional when in operation.
A chiplet may be designed with with Rx-only and Tx-only slices, or
each slice may have both Tx and Rx capability which is configured at runtime. 
A bidirectional link is composed of some number of slices configured for Rx and some for Tx.

FEC (Forward Error Correction) is an optional signal that allows using FEC to 
improve the bit error rate (BER). 
By using an additional wire when FEC is enabled, the payload data rate is not affected
and the wire data rate need not change.
This allows F(PCLK) = F(TxClk) / 2^n^ with FEC off or on, 
which simplifies the clock generation and serialization functions.
If used, FEC is implemented in the Link layer, and the PHY treats the FEC bit the same
as the other data bits. 

AUX is an optional signal that can be used for purposes
such as Data Bus Inversion (DBI), flow control, redundancy for defect repair, etc.
 
The Link layers of Chiplets A and B will need to agree on the details on FEC and AUX usage.
An implementation may choose to support the FEC and AUX wires, or to omit both of them.
If FEC and AUX are included in a PHY implementation, the PHY carries them in the same 
way as the data bits without acting on the content.

Table [#tab-signals-d2d] summarizes these signals.

~ TableFigure {#tab-signals-d2d; caption: "BoW Signals at the Die To Die Interface"; }
|--------------|---------|------------|-------------|
| Function     | # Wires | Signal Name| Notes       |
+:-------------+:-------:+:-----------+:------------+
| Clock        | 2       | CLK+, CLK- | Differential|
|--------------|---------|------------|-------------|
| Data         | 16      | D0-15      |             |
|--------------|---------|------------|-------------|
|Forward Error | 0/1       |FEC         | Optional    |
|Correction    |         |            |             |
+--------------+---------+------------+-------------|
|Auxiliary     | 0/1        |AUX         | Optional    |
|--------------|---------|------------|-------------|
~

### DBI on the AUX wire

Data Bus Inversion (DBI) can be used to mitigate simultaneous switching
output (SSO) noise of a BoW PHY by reducing the number of BoW data wires
that switch between adjacent data transfer cycles. 
DBI functionality is optional; it one of several possible uses of the AUX wire.
If implemented, DBI is in the Link layer and must be implemented on both Rx and Tx.

## Slice Logic Interface

Figure [#fig-bow-logicin] shows the data and control signals in the interfaces to 
the logic in the die in each BoW transmit and receive slice. The data at the slice 
logic interface must be SDR (Single Data Rate - bit rate equal to the PCLK frequency). 
The BoW PHY is 
expected to be used with a link controller. The transmission of logical information 
through a slice and the control and management of a slice are the responsibility of the 
link controller. 

### Slice Logic Interface: Data Signals

The signals in Table [#tab-mac_interface] shall constitute the data interface between the link layer 
and the PHY. 
N is the ratio of the chip-to-chip per-wire data rate to the logic interface per-wire data rate.

~ TableFigure {#tab-mac_interface; caption: "Link Layer Interface Signals"; width:100%;  }
|--------+--------+----------+----------+-------------------------------------------------------------|
| Signal | # Bits | Tx Slice | Rx Slice | Description                                                 |
+--------+--------+----------+----------+-------------------------------------------------------------+
| Data   | 16*N   | In       | Out      | Data                                                        |
+--------+--------+----------+----------+-------------------------------------------------------------+
| FEC    | N or 0 | In       | Out      | Forward Error Correction (optional)                         |
+--------+--------+----------+----------+-------------------------------------------------------------+
| AUX    | N or 0 | In       | Out      | Auxiliary uses (optional)                                   |
+--------+--------+----------+----------+-------------------------------------------------------------+
| PCLK   | 1      | Out      | Out      |                                                             |
+--------+--------+----------+----------+-------------------------------------------------------------+
| TxClk  | 1      | In       | NA       | Comes from a PLL or other clock source, not the Link layer. |
|        |        |          |          | The TxClk source is usually shared among many Tx slices.    |
+--------+--------+----------+----------+-------------------------------------------------------------+                                                         
~

### Slice Logic Interface: Control Signals

A BoW interface must provide the following control and status signals:

* PHY Ready
* Selective reset

The signals in Table [#tab-mac_ctrl_interface] shall constitute the control interface 
from the link layer to the PHY.

~ TableFigure {#tab-mac_ctrl_interface; caption: "Link Layer Interface Control Signals"; width:100%;  }
|----------+--------+----------+----------+------------------------------------------------------------------------------|
| Signal   | # Bits | Tx Slice | Rx Slice | Description                                                                  |
+----------+--------+----------+----------+------------------------------------------------------------------------------+
| PHYReset | 1      | In       | In       | Resets the BoW slice                                                         |
+----------+--------+----------+----------+------------------------------------------------------------------------------+
| PHYReady | 1      | Out      | Out      | 1 indicates that the PHY is ready to transmit/receive mission mode data |
+----------+--------+----------+----------+------------------------------------------------------------------------------+

~

#### PHYReset Tx and Rx
The PHYReset pin shall be asserted by the link controller to initialize the PHY.
While PHYReset signal is asserted, the PHY shall stay in its reset state.
When the PHYReset signal is de-asserted, the PHY shall perform
any necessary self-alignment. 
The reset 
states are otherwise implementation-dependent and shall be documented in the 
datasheet of a particular implementation. 

#### PHYReady Tx
On a Tx slice, the PHY shall assert PHYReady to indicate it is transmitting 
good clock and ready to transmit data.

#### PHYReady Rx
On an Rx slice, the PHY assumes clock received is good when PHYReset is deasserted. 
After the Rx slice clock self-alignments are complete, each Rx PHY slice shall assert its 
PHYReady pin. How an Rx PHY slice determines completion of the self-alignment is 
implementation-dependent. For instance, it can be determined by observing the 
settling of the DLL or by a simple timer. PHYReady asserted indicates
that any data received will be captured correctly.

### Programming

There shall be an AMBA APB programming interface to control internal registers for control 
and status readout of the PHY.

The internal registers are implementation-dependent. 
The internal registers shall be fully documented in the PHY datasheet.

### Link Controller

There shall be a Link Controller (LC) outside the PHY.
This will manage initialization of the Link.
It may reside on one of the chiplets of the Link, in a third chiplet in the package
or outside the package.

Communication from the Link Controller to the PHY slices shall be by a transport
mechanism outside the BoW link. 
This could be a serial link like SPI or I2C, but this is not specified at this time.

Link initialization is described in Section [#sec-reset-and-initialization].


# BoW Modes

A BoW interface must conform to at least one of the Bow Modes seen in Table [#tab-levels].
The recommended maximum wire reach for different packaging types and terminations is 
seen in Table [#tab-reaches].
Exceeding these reach values degrades the voltage margins at the receiver.

"Laminate" is intended to include organic laminate packages (a.k.a. "buildup) and similar 
technologies with approximately 25 um line and space rules.

"Advanced" is intended to include silicon interposer and similar technologies.
These have much finer line and space dimensions, but traces are usually much
more resistive than in organic laminate packages and will be limited to much shorter trace lengths. 
Due to these short traces, termination is not expected to be useful 
for implementations targeting Advanced packaging.

~ TableFigure {#tab-reaches; caption: "Recommended BoW Wire Reaches"; width:100%;  }

+----------+---------------+-------+--------------+-------------------+-------------------+--------------+
|          |               |       | Laminate     | Laminate          | Laminate          | Advanced     |
+----------+---------------+-------+--------------+-------------------+-------------------+--------------+
|          |               |       | Unterminated | Source Terminated | Doubly Terminated | Unterminated |
+----------+---------------+-------+--------------+-------------------+-------------------+--------------+
| Bow Mode | Wire Bit Rate | TxClk |  Reach       |  Reach            |  Reach            |  Reach       |
+----------+---------------+-------+--------------+-------------------+-------------------+--------------+
|          | (Gb/s/wire)   | (GHz) | (mm)         | (mm)              | (mm)              | (mm)         |
+----------+---------------+-------+--------------+-------------------+-------------------+--------------+
| BoW-32   | 2             | 1     | 10           | 20                | 50                | 4            |
+----------+---------------+-------+--------------+-------------------+-------------------+--------------+
| BoW-64   | 4             | 2     | NA           | 10                | 50                | 2            |
+----------+---------------+-------+--------------+-------------------+-------------------+--------------+
| BoW-128  | 8             | 4     | NA           | 5                 | 50                | 1            |
+----------+---------------+-------+--------------+-------------------+-------------------+--------------+
| BoW-256  | 16            | 8     | NA           | NA                | 50                | NA           |
+----------+---------------+-------+--------------+-------------------+-------------------+--------------+

~
Adding termination increases the speed and/or reach, at the expense of greater design complexity
and power.

# BoW Physical Configuration

## Dead-Bug Views

The physical diagrams in this document are oriented looking down at the top layer of the 
unpackaged chiplets.
Since these are flip-chip packages, these views are equivalent to looking through the 
bottom of the package with the balls up (dead bug view).
For the view as seen looking down on a package as mounted on a PCB (live bug view), 
these views must be mirrored.

## BoW Components

~ Figure { #fig-components; caption: "BoW Link Components" }
![components]
~
[components]: images/bowspec_figure_components.PNG { width:auto; max-width:70% }


A BoW link between two chiplets is made up of
wires, slices, and stacks as seen in Figure [#fig-components].

* The signal traces in the package between chiplets are called **wires**.
* The basic unit is a **slice**; it must have 18 or 20 signal bumps. 
It must have 2 bumps for the differential
clock and 16 single-ended data bumps.
It may also have the optional single-ended signals AUX and FEC. 
The long edge of a slice must be parallel to the chip edge.
* Multiple slices may be placed in a **stack**. The slice positions are
designated A, B, C, etc, starting with the slice closest to the edge of the chip.
* A **link** from one chiplet to another must be composed of one or more
stacks placed along the chip edge. A link may be
configured with equal numbers of Rx and Tx slices,
or it may be asymmetric or one-way.

## Example Link

The minimal bidirectional reference link is shown in Figure [#fig-min_link].



~ Figure { #fig-min_link; caption: "BoW Minimal Bidirectional Reference Link" }
![bowspec_figure_min_link2]
~
[bowspec_figure_min_link2]: images/bowspec_figure_min_link2.png "bowspec_figure_min_link2" { width:auto; max-width:90% }

In this example, each chiplet has one Tx slice and one Rx slice, 
arranged in two one-slice stacks on each chiplet.
This is a dead-bug view.

## Die-to-Die Signals

~ TableFigure {#tab-signals; caption: "BoW Die-to-Die Signals"; }
|--------------|----------|------------|-------------|
| Function     | # Signals| Signal Name| Notes       |
+:-------------+:--------:+:-----------+:------------+
| Clock        | 2        | CLK+, CLK- | Differential|
|--------------|----------|------------|-------------|
| Data         | 16       | D[15:0]    |             |
|--------------|----------|------------|-------------|
|Forward Error | 0/1      |FEC         | Optional    |
|Correction    |          |            |             |
|--------------|----------|------------|-------------|
|Auxiliary     | 0/1      |AUX         | Optional    |
|--------------|----------|------------|-------------|
~

Each BoW slice consists of a differential clock pair, 16 single-ended data wires, 
and optional wires FEC and AUX. Each BoW slice is unidirectional when in operation.
A PHY may be designed as Rx-only and Tx-only slices, or
each slice may have both Tx and Rx capability, one of which is selected at configuration time. 
A bidirectional link is composed of some number of slices configured for Rx and some for Tx.

FEC (Forward Error Correction) is an optional signal that allows using FEC to 
improve the bit error rate (BER).  AUX is an optional signal that can be used for purposes
such as DBI, flow control, redundancy, etc. Chiplets A and B will need to agree on
the details on FEC and AUX usage, which is defined in the Link layer.

## Signal Ordering 

A BoW interface must conform to these wire order rules at the edge of the chip:

* The signals for a Tx slice are in the following order at the chip edge, 
going clockwise around the chiplet in a dead-bug view: 
AUX, D0, D1, D2, D3, D4, D5, D6, D7, CLK+, CLK-, D8, D9, D10, D11, D12, D13, D14, D15, FEC
* The signals for an Rx slice are in the reversed order (ascending goes counter-clockwise)
* The same clockwise/counter-clockwise ordering is used on all four sides of a chiplet
* The AUX and FEC signals may be omitted


## Bump Arrangements

Note that bump patterns are not specified by BoW; only the signal *ordering* at 
the chip edge is specified for interoperability. 

The reference example in Figure [#fig-min_link]
uses hexagonal closest packing for the bumps: two rows for signal bumps and
one row for power and ground bumps. 
In this pattern, the wire pitch is half the bump pitch.

### Alternate Bump Arrangements

Alternate bump arrangements may include:

* 90-degree rotation of the hexagonal packing direction (to decrease the wire pitch 14%)
* square bump arrays instead of hexagonal (for regularity of layout)
* more than two rows of signal bumps (to decrease the wire pitch without changing the bump pitch)
* different ordering of power and ground bumps
* multiple power and ground rows

Somewhat different wire pitches between two chiplets can be accommodated with 
fan-out in the chip-to-chip wires. This is limited by the maximum wire length.

## Cross Section

A cross section for an organic laminate (a.k.a. "buildup") package is shown in 
Figure [#fig-pkg_cross_section].

~ Figure { #fig-pkg_cross_section; caption: "Cross section of a BoW Link in an Organic Laminate Package" }
![pkg_cross_section]
[pkg_cross_section]: images/bowspec_figure_pkg_cross_section.PNG { width:auto; max-width:70% }
~

In an organic laminate package, signal layers should be alternated with ground layers 
in order to maintain a controlled impedance of 50 ohms. Each slice position (A, B, C, D) 
should be associated with one signal layer and there is no mixing 
of signals from multiple slices.

In any technology, the position-A slice on chiplet A must be connected to the position-A 
slice on chiplet B (one must be configured for Tx and one for Rx). 
The position-B slices are connected together, and so on.

There is no specified limit to the number of slices in a stack. 
In organic laminate, the practical limit in 2020 is an 8-2-8 laminate which supports 4 slices
as shown in Figure [#fig-pkg_cross_section].
A 7-2-7 laminate can support 4 slices by omitting the top GND layer, 
but with reduced signal integrity.
Layers on the bottom side of the package typically cannot be used for BoW signals 
due to low via density passing through the thick central core layer.

In advanced packaging technologies, the shorter wire lengths may allow the use of 
non-controlled-impedance wires and unterminated transmitters and receivers.
The smaller wire and space dimensions may allow
the wires for multiple slices to be interleaved on a single wiring layer.
The wire order within each slice must be maintained, even if interleaving with 
other slices is used.


## Staggered Slices

To optimize the density of hexagonal bump arrays, slices in positions B and D may be offset 
horizontally by one half the bump pitch as seen in Figure [#fig-4x2stack]. 
This necessitates a one-bump-pitch horizontal jog
in the wires for slices B and D.  The practical effect of this 130-um jog across a 2.5+ mm 
wire between chiplets is very small.

~ Figure { #fig-4x2stack; caption: "Staggered slices for the densest bump packing" }
![bowspec_4x2stack]
[bowspec_4x2stack]: images/bowspec_4x2stack.png "bowspec_4x2stack" { width:auto; max-width:90% }
~

An alternative arrangement is to keep the slices aligned vertically. 
This requires adding a small extra vertical space between the slices, for an overall increase of 4%
of the slice area.

## Slice Numbering

A BoW interface must conform to these slice numbering rules:

* The Tx slices in a link are numbered from 0 at the upper left edge of the link 
(facing from the chip center to the edge in a dead-bug view) 
and ascending through the Tx slices in a stack, then from stack to stack clockwise.
* The Rx slices in a link are numbered from 0 at the upper right, through the Rx slices in a stack,
then stack to stack counterclockwise.

An example of this numbering is shown in Figure [#fig-alt_slices].

The signal ordering and slice numbering rules allow BoW chiplets to be connected without 
signal reordering regardless of chiplet rotations.

## Slice Stacking Pattern for Symmetric Links

For bidirectional links, a pattern of alternating Tx and Rx stacks should be used. 
Figure [#fig-alt_slices] shows a bidirectional link with 4 stacks of 4 slices each, 
for 8 Tx and 8 Rx slices on each chiplet.

~ Figure { #fig-alt_slices; caption: "Alternating-Stacks Pattern of Tx and Rx Slices in a Link" }
![alt_slices]
[alt_slices]: images/bowspec_figure_alt_columns_4x4_link.png { width:auto; max-width:80% }
~

Asymmetric and unidirectional links may use any slice pattern, but the slice numbering rules 
must be observed. 

An alternate approach with more flexibility is to design every slice to operate as either 
Rx or Tx, to be configured after assembly or upon powerup. 
This allows complete flexibility in link configuration and interoperability and 
also provides an opportunity for wafer-test loopback testing. 
In this case, number the slices as if they are all Tx slices.

In BoW-256 at 16 Gb/s/wire, the link in Figure [#fig-alt_slices] provides a total of 2.0 Tb/s 
in each direction.
In an organic substrate using the hexagonal bump pattern of Figure [#fig-min_link]
with a bump pitch is 130 um, 
the total edge width is 5.2 mm (4.16 mm without AUX and FEC); the depth from the edge is 1.35 mm.
In an interposer, if the bump pitch is 40 um, the edge width is 1.60 mm (or 1.28 mm) and the depth is 0.42 mm.

# BoW PHY Electrical Specifications {#elec-specs}

In order to ensure interoperability between differing BoW PHY implementations, this chapter provides a set of 
electrical specifications that all such BoW PHY implementations must meet.   

## Voltages and Termination Resistance

All BoW implementations must support signaling based on a 0.75 V I/O supply.  BoW PHYs may also support higher or lower signaling 
voltages, but must support 0.75 V based signaling for interoperability. 

Independently of the I/O supply, BoW transmitters and receivers must meet the DC termination resistance requirements defined in Table [#tab-impedance].
Note that TX/RX termination (output/input) resistance values are skewed low/high compared to the channel impedance in order to ensure
that the DC single-ended voltage swing at the RX is never reduced to less than half of the I/O supply (i.e., 375mV for a 0.75V I/O supply).  Note that 
these termination resistance values should be met with logical 0, logical 1, and mid-scale between logic 0 and logic 1 voltages on the wire 
between the TX and the RX.     

~ TableFigure {#tab-impedance; caption: "Transmit and Receive Termination Resistance Requirements vs. Mode"; width:100%;  }
|--------------|---------------------|-----------------------------|-----------------------------|
|              |Unterminated         |Source-Terminated            | Doubly Terminated           |
|              |                     |                             |                             |
+:------------:+:-------------------:+:---------------------------:+:----------------------------+
| TX DC Term.  | As required to meet | **36 &Omega; - 50 &Omega;** | **36 &Omega; - 50 &Omega;** |
|              | TX rise-time        | (0.72 - 1.0 Z~chan~)        | (0.72 - 1.0 Z~chan~)        |
|              |                     |                             |                             |
+--------------+---------------------+-----------------------------+-----------------------------+
| RX DC Term.  | -                   |-                            | **50 &Omega; - 69 &Omega;** |
|              |                     |                             | (1.0 - 1.38 Z~chan~)        |
|              |                     |                             |                             |
+--------------+---------------------+-----------------------------+-----------------------------+
| Within-Slice | -                   | **&sigma; = 1.333%**        | **&sigma; = 0.667%**        |
| DC Term.     |                     | (8% over 6 &sigma;)         | (4% over 6 &sigma;)         |
| Matching     |                     |                             |                             |
|--------------|---------------------|-----------------------------|-----------------------------|
~  

Especially in doubly terminated modes, within-slice variations of termination resistance would directly result in varying swing levels at each pin.
Thus, in order to reduce or eliminate the need for per-pin voltage reference adjustment at the RX, Table [#tab-impedance] also specifies
requirements on DC termination resistance matching across all I/O's within a given BoW slice.  The &sigma; for this variation in the table
should be interpreted as capturing within-slice manufacturing variability across worst-case voltage/temperature operating conditions, and is expected to 
be primarily influenced by some combination of transistor and explicit resistor matching (with the mix depending on the circuit implementation).   

In doubly terminated modes of operation, the RX termination resistance should be connected to 0V, the I/O supply, or mid-rail of the I/O 
supply (e.g., 375mV with a 0.75V I/O supply).  The selection of termination voltage is expected to be static (hardwired) in the RX, and should
be specified in the receiver's datasheet.  It is expected that Source-Series-Terminated (SST) Transmitters will be largely agnostic to the choice 
of termination voltage on the receiver.       

## ESD 
BOW I/O shall be designed to withstand **50 V CDM** (Charged Device Model) and 
**250 V HBM** (Human Body Model). 
This requirement is deemed sufficient for intra-package signaling, 
similar to other die-to-die interface standards.

## Return Loss and Parasitic Capacitance

Since BoW PHYs are targeted for relative dense and simple realizations, it is expected that the primary frequency-dependent 
parasitics seen at a PHY's I/Os will be capacitive in nature.  Table [#tab-cap] provides limits on the maximum "equivalent"
capacitance allowed on each side of each BoW I/O pin.  (E.g., a BoW-128 TX is allowed to have up to 600fF of 
equivalent capacitance.)  Note that while the maximum capacitance specification does increase at lower data-rates, 
it is recommended that BoW PHY implementations retain as low of a capacitance as practical in order to reduce power consumption 
and improve signal integrity.    

~ TableFigure {#tab-cap; caption: "Maximum Parasitic Capacitance at a BoW I/O vs. Mode"; width:100%;  }
|------------------------|-----------|-----------|-----------|
|                        |BoW--32    |BoW-128    | BoW-256   |
|                        |or BoW-64  |           |           |
+:----------------------:+:---------:+:---------:+:----------+
| Maximum Equivalent     | **1.2pF** | **600fF** | **300fF** |
| Capacitance (TX or RX) |           |           |           |
|------------------------|-----------|-----------|-----------|
~  


Since the actual frequency-dependent impedance profile of any given implementation may be comprised of a complex electrical network, 
compliance with the "equivalent" capacitance metric is formally defined by requiring that the magnitude of the return loss of any BoW I/O
is lower than the maximum limits shown in Figure [#fig-S11] below.  Similarly to DC termination resistance, the maximum s~11~ magnitude 
in the figure must be met with logical 0, logical 1, and mid-scale between logic 0 and logic 1 voltages on the wire between the TX and RX.     

~ Figure { #fig-S11; caption: "BoW Termination Maximum Return Loss" }
![S11]
~
[S11]: images/s11_max.png {width:auto; max-width:80% }

## Receiver Bandwidth

While this specification does not place a direct requirement on the bandwidth of a BoW receiver implementation, it is recommended that
such receivers maintain an effective bandwidth of at least **(0.667/T~bit~) Hz**.  For example, for a BoW-256 PHY, the receiver bandwidth 
is recommended to be at least 10.667 GHz.      

# BoW PHY Timing Specifications

## Clocking

~ Figure { #fig-clocking; caption: "BoW Clock and Data Block Diagram - One Tx Slice, One Rx Slice" }
![clocking]
[clocking]: images/bowspec_figure_PHY_block.PNG { width:auto; max-width:100% }
~

Figure [#fig-clocking] shows the clock and data flow for a single Tx slice and a single Rx slice.
On the Tx side, data bits (and optional FEC and AUX bits) come in a wide word from the link layer, 
and are serialized to the line rate. 
At the Rx side, they are sampled with a common slicer clock in most BoW implementations.
BoW PHYs may optionally implement per-bit delay adjust or per-bit slicer clock adjust.

All BoW interfaces shall be DDR (Double Data Rate) at the chip-to-chip interface: 
the data bit rate is twice the clock frequency, 
so data is clocked in on both edges of the clock in the Rx slice.

The following table provides clock and data rates for an example with 4 Gbps wire data rate 
and M=4 to support a 1 Gbps data rate at the Link-PHY interface.

~ TableFigure {#tab-; caption: "Example Clock and Data Rates for Figure [#fig-clocking] with 4 Gbps, M=4"; width:100%;  }
|---------------------------------|--------|-----------|
| Signal                          |Rate    |SDR/DDR    |
+:-------------------------------:+:------:+:----------+
| TxClk                           | 2 GHz  |           |
+---------------------------------+--------+-----------+
| CLK+,CLK-                       | 2 GHz  |           |
| D[15:0],AUX,FEC                 | 4 Gbps | DDR       |
|                                 |        |           |
+---------------------------------+--------+-----------+
| PhyClk                          | 1 GHz  |           |
| P_D[63:0],P_AUX[3:0],P_FEC[3:0] | 1 Gbps | SDR       |
|---------------------------------|--------|-----------|
~

The ratio M should be limited to integers, preferably powers of two, and other ratios 
supported by the Link layer. 

The DDR clock TxClk is provided to the Tx PHY from elsewhere on Chiplet-A.
This may come for example from an on-chip PLL (typically shared across multiple slices) or 
routed from the RxClk of an Rx slice on Chiplet-A. In order to meet duty cycle requirements, 
a Duty Cycle Corrector (DCC) may be needed in the Tx slice. TxClk is used to drive the serializers and 
provide the output CLK+,CLK- to Chiplet-B.

On the Rx side, the PHY must align the slicer clock to sample the data correctly.
This may be done with a DLL or adjustable delays or other methods.  If the PHY includes 
control logic to self-align the slicer clock for correct sampling of the data, the PHYReady 
signal should be asserted after the logic has determined that such alignment is complete.

All BoW interfaces shall be source synchronous within a slice. No modes of BoW require per-wire
or per-slicer delay adjustments, but such capability may be optionally included. 

Clock skew between the slices in each direction of a link depends on the implementation of the
TxClk distribution to all the Tx slices. 
That is, for the data flow from Chiplet A to Chiplet B, 
the TxClk distribution on Chiplet A sets the 
the clock skew of the Tx slices on Chiplet A and the clock skew of the Rx slices on Chiplet B,
and vice versa for flow from B to A. This skew must be no more than 150 ps/stack along the chip edge.
There is no specification of the skew between TxClk on Chiplet A vs TxClk on Chiplet B.

On both the Tx and Rx sides, the Link layer must include a Clock Domain Crossing (CDC) to 
align the data between CoreClk and PhyClk. 
These CDCs must also be able to absorb the slice-to-slice clock skew and 
core clock distribution skew across the whole link.

If DCCs are included in the PHY and they need an alignment cycle, they shall include 
control logic to perform self-alignment.

## Clock and Data Specifications {#clk-data-specs}

### Transmitter Maximum Rise-Time

The maximum 20% - 80% rise-time measured at the output of BoW TX shall 
not exceed **32% of a UI**.  For example, for a BoW-128 Transmitter, the 
20% - 80% rise-time should not exceed 40 ps.  This rise-time should be measured 
with the TX driving an ideal load of 50 &Omega; (Z~chan~).     

### Transmitter Jitter {#tx-jit}

The total jitter measured between the CLK and any data (D) line at the output 
of the TX shall not exceed **14% of a UI peak-to-peak at an error rate of 1e-15**. 
The evaluation of jitter must include all possible TX jitter contributors, including reference clock, clock distribution networks, 
any DCC, PLL jitter, power-supply noise and switching noise.  In order to retain TX design 
flexibility, this single total jitter specification includes both random and deterministic 
contributions to jitter.  Note that to account for the 1e-15 error rate and peak-to-peak
requirement, the total jitter t~j,tot~ should be computed as:

~ center
t~j,tot~ = t~j,determinsitic~ + 15.9 &sigma;~tj,random~
~ 

This jitter must be evaluated for CLK edges that are up to **3 UI** earlier than 
the CLK edge that launched the data bit being captured at the receiver.  This is because even 
though jitter on the data edges may be correlated with the CLK jitter, 
the slicer in the Rx side is likely to use a different CLK edge due to delays in the 
Rx-side clock alignment circuit (usually a DLL).

In order to properly account for the jitter filtering/peaking that will occur due to the 
difference in delay between the data launching edge at the TX and the data capturing edge at the RX, 
when evaluating the transmitter's jitter (and whether it meets the requirements described in this section),
the jitter at the TX output that is **correlated** between the CLK and D lines should be 
filtered by the following frequency-dependent transfer function:

~center
**H~tx_jit~(j&omega;) = 1-e^(-j&omega;t~clk-d~)^**  
~

where t~clk-d~ is the number of cycles of delay between the CLK edge that launched the data 
bit and the CLK edge used to capture it.  Note that jitter that is not correlated between the CLK and D 
signals should **not** be filtered by this transfer function.  (I.e., if the
CLK signal and a given D signal have completely independent sources of jitter added to them, 
those jitter sources would not be filtered by H~tx_jit~(j&omega;).  Since the total TX jitter 
after filtering by this transfer function might not be monotonic with t~clk-d~, and since receiver implementations 
may realize varying values of t~clk-d~, a transmitter must meet the 14% of a UI 
peak-to-peak specification for **t~clk-d~ = T~bit~**, for **t~clk-d~ = 2T~bit~**, **and** 
for **t~clk-d~ = 3T~bit~**.     

### Transmitter CLK Edge to D Transition Skew + Jitter

In addition to jitter, BoW TX PHY implementations may introduce skew between the 
individual D signals and the CLK signals within a slice.  The total amount of skew and jitter (as defined in Section
[#tx-jit]) introduced by a BoW TX must be less than **18% of a UI peak-to-peak**.
For example, a TX whose total jitter is 14% of a UI (and hence just meets the requirement) is 
allowed to introduce up to 4% of a UI peak-to-peak skew between CLK and D, while a TX with jitter better than 
required by this specification is allowed to introduced a larger amount of skew.

Note that this specification should be measured directly at the TX output while driving 
an ideal load of 50 &Omega; (Z~chan~).       

### CLK Receiver Sensitivity to Common-Mode Variations

The timing of a BoW RX PHY's sampling clock edge at the slicer must be modulated by **less 
than 0.1% of a UI per mV of common-mode variation on CLK+/CLK-**.  This sensitivity requirement 
must be met across any common-mode variation frequency less than or equal to 1/T~bit~.  For example,
the sampling clock edge of a compliant BoW RX would vary by less than 2% of a UI peak-to-peak 
for peak-to-peak common mode variation on CLK+/CLK- of 20mV.        

### Receiver Sensitivity and Timing Margin {#rx-eye}

As indicated in Figure [#fig-eye] and Table [#tab-eye], a BoW receiver must meet the required bit-error-rate 
of 1e-15 when receiving signals with a vertical opening (voltage margin) of at least V~rx_eye~ and 
horizontal opening (timing margin) of at least t~rx_eye~.  Both V~rx_eye~ and t~rx_eye~ should include any
random and/or statistical noise and error terms introduced by either the channel or the TX at a level that 
corresponds to 1e-15 probability.  Similarly, the receiver's voltage sensitivity (which sets V~rx_eye~)
must also be evaluated at 1e-15 error rate, so the total voltage sensitvity V~s,RX~ should be computed as:

~center
V~s,RX~ = V~err,deterministic~ + 15.9 &sigma;~V~~err,random~
~

Note that the receiver's voltage sensitivity should take into account all voltage error sources at the
receiver, including receiver thermal/flicker noise, supply noise, residual offset, and reference level errors. 

Since swing and signal integrity are expected to vary with termination as well as data-rate, the RX voltage 
sensitivity requirements and minimum timing margin requirements are termination- and rate-dependent, as outlined
in Table [#tab-eye].

~ Figure { #fig-eye; caption: "Eye Diagram Definitions" }
![eye]
[eye]: images/bow_rx_eye.png { width:auto; max-width:80% }
~

~ TableFigure { #tab-eye; caption: "Receiver Voltage Sensitivity and Minimum Timing Margin"; width: 100%}
|------------------------|----------------|------------------|-------------------|
|                        |Unterminated    |Source-Terminated | Doubly Terminated |
|                        |                |                  |                   |
+:----------------------:+:--------------:+:----------------:+:------------------+
| Maximum RX sensitivity | **150 mV**     | **150 mV**       | **75 mV**         |
| BoW-128, BoW-256       |                |                  |                   |
| (V~rx_eye~)            |                |                  |                   |
|                        |                |                  |                   |
+------------------------+----------------+------------------+-------------------+
| Maximum RX sensitivity | **300 mV**     | **300 mV**       | **150 mV**        |
| BoW-32, Bow-64         |                |                  |                   |
| (V~rx_eye~)            |                |                  |                   |
+------------------------+----------------+------------------+-------------------+
| Minimum Timing Margin  | **50% T~bit~** | **50% T~bit~**   | **50% T~bit~**    |
| @ RX bump              |                |                  |                   |
| (t~rx_eye~)            |                |                  |                   |
|                        |                |                  |                   |
|------------------------|----------------|------------------|-------------------|
~

<XX COMMENT: DO WE WANT TO KEEP THE OVERSHOOT SPEC?
Overshoot: 25% of VDDIO
XX>

<XX COMMENT
Since these signals do not leave the package, these values must be verified with simulation.

If the slice implementation allows programmatic control of the DLL alignment values, 
varying those values after locking the DLL may provide timing margin information.
If the slice implementation allows programmatic control of the receiver voltage 
thresholds, varying those values may provide vertical margin information.
XX>


### Slice-to-Clice CLK Skew

The slice to slice clock skew t~skew~ across the width of a BoW link (along the chip edge) 
must be less than **150 ps/stack**. 
(E.g., for a 4-stack interface, the skew from end to end must be less than 600 ps.)
This skew includes only analog delays and specifically does not include any clock-related timing skew due to 
flip-flops/latches or varying reset states.  This skew is expected to be dominated by the TxClk distribution network.


# Chip-to-Chip Channel Specifications

With the exception of the maximum skew requirement defined in Section [#chan-skew], BoW does not place
any direct requirements on characteristics such as channel loss or crosstalk.  Instead, BoW channels
are considered compliant if they are able to achieve the required V~rx_eye~ and t~rx_eye~ defined 
in Section [#rx-eye] in conjunction with reference transmitters and receivers that meet all of the
requirements provided in Section [#elec-specs] and Section [#clk-data-specs]. To assist with evaluating
compliance of a given channel, open-source software evaluating signal integrity and the overall 
link budgets with the reference transmitters and receivers will be provided at a future date.

### Channel-Induced CLK Edge to D Transition Skew at RX {#chan-skew}

Within each slice, a BoW channel must not introduce more than **6.67ps** of skew between CLK and D lines.  This corresponds to 1mm of length mismatch 
on a substrate with an &epsilon;~r~ of 4. 


The channel (wires) between chips should meet the following specs to ensure signal integrity.

<XX
## Recommended BoW Channel Specifications on Laminate

BoW channel length on laminate is limited by the round trip reflection delay to 10 mm for 4 Gb/s/wire.

BoW channels longer than 2 mm on laminate should meet these specs:

~ TableFigure {#tab-clocks; caption: "BoW Clock Specifications"; width:100%;  }
|-------------------------|----------------|---------|
|Parameter                |Value           | Comment |
+:-----------------------:+:--------------:+:-------:+
| Length mismatch within a slice |  1 mm   | = ~6 ps <= 0.05 UI |
+-------------------------+----------------+---------+
|Impedance                | 50\+-5 ohms    |         |
+-------------------------+----------------+---------+
| C~cross~/C~total~ ratio | < 40%          |         |
+-------------------------+----------------+---------+
|   R~series~             |  < 4 ohms      |         |
+-------------------------+----------------+---------+
~
C~cross~ is the total capacitance of a wire to all its neighboring wires.
C~total~ is the total capacitance of a wire including to grounds.

<XX
Stripline (buried) wires with 25 um line, 40 um space and 33 um dielectric thickness have 
C~cross~/C~total~ of 28% and an impedance of 48 ohms.
XX>

<XX
Channels on interposer will have different requirements, not yet specified.
XX>

<XX
~Framed {color: blue}
Interposers have only 4 layers, very thin dielectrics, 
cannot reach 50 ohm impedances without huge series R.  So they need to be designed differently.

Kens quick study found wire lengths from 570 to 1380 um 
(for 55 um bump pitch, 4-slice stack, 0.1 mm chip to chip spacing).
The best config looked like 3 um line and space, alternating signal and ground layers.
This gives a wire pitch of 1/9 the bump pitch, so we could even support 4 slices in just one
signal layer.
The line C for 1400 um is 0.76 pF, the R is 14 ohms, the RC is 11 ps, which is okay for 
8 Gb/s.
Source termination is probably not wanted in this case since there is so much Rline, 
the lines are short and
we cant build a reasonable controlled impedance line.

Is this enough data to spec a BoW Basic on interposer?  
Does anyone have more data?
~
XX>


## Example BoW Channel Loss and Crosstalk for Doubly-Terminated Links

To provide guidance on the types of channels that are expected to meet the requirements for compliance
with the BoW reference receiver and transmitter, this section provides examples of typical loss and 
crosstalk profiles for doubly-terminated channels supporting 16 Gb/s operation (which are most sensitive 
to channel signal integrity).  Note that when operating at lower rates, the frequency axes in the figures 
below can be scaled with the data-rate relative to 16 Gb/s.

### Channel Loss

To avoid the need for equalization, BoW channels will typically meet the loss limit in Figure [#fig-loss].

~ Figure { #fig-loss; caption: "BoW Doubly-Terminated Wire Channel Loss Limit" }
![loss]
~
[loss]: images/bowspec_figure4.jpg { width:auto; max-width:60% }


### Crosstalk

The crosstalk in a BoW channel will typically meet the limits shown in Figure [#fig-xtalk].

~ Figure { #fig-xtalk; caption: "BoW Doubly-Terminated Wire Crosstalk Limit" }
![xtalk]
~
[xtalk]: images/bowspec_figure6.jpg { width:auto; max-width:60% }

Power-sum crosstalk is the sum of crosstalk power of all aggressors on a target trace.
The example limit depicted in Figure [#fig-xtalk] corresponds to:
~center
XtalkLimit = -37*e^-f/8GHz^-10 dB
~

<XX
~Framed {color: blue}
Proposed text that needs numbers:

An example geometry which meets this limit is microstrip (surface) lines with 
X um line and Y um space, on Z um dielectric over a ground plane.
~

   
~Framed {color: blue}
What is the origin of the Xtalk Limit equation?  Is there a paper reference?

~
XX>

# BoW in an ODSA Design
Chiplet-based designs require logical connectivity between the die in a
single package, in addition to physical connectivity. This section provides an overview of 
how with the Open Domain-Specific Architecture stack it can be used as an underlay for 
popular transaction protocols.

## BoW for Common Transaction Protocols
Two connected die in a multi-chiplet device need to exchange logical information. 
The ODSA aims to define an open physical and logical interface for chiplets, as shown in 
Figure [#fig-odsa-stack] to enable chiplets from multiple vendors to interoperate and be 
integrated in a multi-die package. The Bunch of Wires is an open D2D PHY option in the
interface. The logical component of the ODSA interface aims to 
support protocols used for the two most common chiplet use cases, package 
aggregation and die disaggregation across a wide range of open and proprietary D2D PHYs
such as PCIe, CXL, CCIX, AXI and proprietary streaming protocols. 

~ Figure {#fig-odsa-stack; caption: "The BoW PHY in the ODSA Stack"}
![bowspec_figstack]
~
[bowspec_figstack]: images/bowspec_odsa_stack.jpg "bowspec_figure1" {width:auto; max-width:100%}

The ODSA stack abstracts
the PHY layer from the logical interface by using the well-defined abstraction interfaces
PIPE and LPIF. 
Any logic transaction controller, such as a PCIe controller, that
supports a PIPE or LPIF interface can use any D2D PHY that also supports that
interface as its physical layer.
As shown in Figure [#fig-odsa-stack], the BoW interface may receive data
through either the PIPE or LPIF interfaces to support common transaction protocols. 
For this use case, some BoW-specific adapter logic will be needed to support the requirements of PIPE 
or LPIF.
The specifications for these adapters are outside the scope of this document. 
Figure [#fig-bow-pcie] shows how the
BoW with an PIPE adapter can be interfaced to a PCIe controller.

~ Framed {color: blue}
Bapi: please remove "serializer" and "deserializer" from the labels in Figure [#fig-bow-pcie]
 - these are part of the PHY.
~



~ Figure {#fig-bow-pcie; caption: "BoW with a PIPE adapter for PCIe transactions"}
![bowspec_figcomponentspcie]
~
[bowspec_figcomponentspcie]: images/fig-bow_pcie.jpg {width:auto; max-width: 100%}


# Reset and Initialization

## External Facilities

These facilities must be provided outside the PHY:

* a Link Controller (LC) which
will manage initialization of the Link.
It may reside on one of the chiplets of the Link, in a third chiplet in the package
or outside the package.
* A communication path from the Link Controller to the PHY slices outside the BoW link. 
This could be a serial link like SPI or I2C, but this is not specified at this time.
* A source of training pattern data outside the PHY, assumed to be the Link Layer here.
This must be able to repetitively
transmit an arbitrary 288-bit pattern (16 bits per wire) required by the Rx slice for clock 
alignment as specified in the datasheet for the Rx PHY.
* The Reset input to each PHY shall be asserted upon powerup. 
It may also be asserted by commands from the LC.

An example topology is shown in Figure [#fig-bow_system].


~ Figure { #fig-bow_system; caption: "Example BoW System Configuration" }
![bow_system]
~
[bow_system]: images/bow_system.png { width:auto; max-width:70% }

## Initialization Sequence

A Tx-Rx Link shall be brought up as follows:

1. The Link Controller (LC) performs any needed configuration of the PHY 
slices via the APB interface. This is implementation dependent
1. The LC de-asserts Reset to the Tx PHY slices
1. Once its Tx clock stabilizes, each Tx PHY slice asserts Ready to the LC
1. When all Tx PHY slices are ready, the LC signals the Tx Link Layer to 
send the clock training pattern specified by the Rx PHY
1. The LC de-asserts Reset to the Rx PHY slices 
1. Each Rx PHY slice performs clock and data alignment and signals Ready to the LC when done
1. When all Rx PHY slices are ready, the LC signals the Tx and Rx 
Link Layers that they can proceed with channel bonding

Not specified:

* Whether the up and down links are initialized one at a time or in parallel
* How the signals from the the LC get from the I2C to the PHY Ready and Reset pins of the PHY
* How the Link Layer performs channel bonding or start of data transmission
* Any PHY registers required to implement this process - these
are an implementation choice. 


## Other Unspecified Areas

* There is no low-power standby mode defined.
* There is no specification for when a PHY should de-assert its Ready pin. 
PLL or DLL losing lock are possible causes.
* There is no definition of what occurs if the PHY does de-assert Ready
* There is no definition of what should be done with unused PHYs 
(that are on the chip but have no partner on another chiplet)
* There is no definition of addressing chiplets, Links or slices


# Configuration

PHY configuration is implementation dependent. It may include:

* Tx vs Rx for configurable slices
* PLL, DLL, DCC or similar circuit configuration

PHY configuration may be hardwired in the chiplet implementation, or it may be programmable.




~framed {color:Green}

##Link Training

Link training will be addressed in a future revision of the spec
~

# Control Register Mapping

The interface control registers are implementation dependent.
The registers shall be fully documented in the PHY datasheet.


# Testability

## Test Patterns

~framed {color:blue}
* Should we make any or all of these test patterns mandatory to facilitate interoperability?
* Syncing a receiver to a PRBS-31 pattern is slow without an agreed start time. 
How do other specs do this?
~

Test patterns should be programmable to repeat indefiniately.

Suggested test patterns are:

* PRBS-9 Pattern, defined  by polynomial of X^9^+ X^5^ +1

* PRBS-31 Pattern, defined by polynomial of X^31^ + X^28^ +1

* Isolated 1 and 0 pattern to test DC wander and single  bit response:

 *  ['0'] X 10 + '1' + ['0'] X 10 + ['1'] X 10 + '0' + ['1'] X 10 + ['0'] X 10
 * This can be prepended to a PRBS pattern:


~ Figure { #fig-Pattern; caption: "Stress Test Pattern" }

![Pattern]

[Pattern]: images/LB_Spec/wave_prbs.png { width:auto; max-width:100% }

~



## Loopback Test

A BoW interface may implement loopback testing for several use cases: 
at chiplet wafer-sort test, post-assembly package test, and debug/validation. 

Wafer sort tests are currently only practical for the BoW interface with 
regular bump pitches (~130um), where ATE (automatic testing equipment) probe 
boards with matching pin pitches are available. 
Microbump probes will require additional effort.

Unidirectional links need open-loop testing. 
In Tx open loop testing, shown in Figure [#fig_test_tx], Chiplet-A transmits a 
known test pattern (PRBS9 or PRBS31) to a golden reference receiver through the ATE load board. 
The received pattern is verified in the ATE load board.

Rx open loop testing, shown in Figure [#fig_test_rx], is used for a link 
where the DUT is only a receiver. 
A golden reference Tx transmits a known pattern (PRBS9 or PRBS31) through the channel to the chiplet. 
The received pattern will be analyzed for quality and functional tests. 

The logic for generating and testing the PRBS sequences is outside the PHY, e.g., in the Link Layer.


~ Figure { #fig_test_tx; caption: "Open loop Tx wafer test" }
![fig_test_tx]
[fig_test_tx]: images/LB_Spec/Slide2a.png { width:auto; max-width:100% }
~

~ Figure { #fig_test_rx; caption: "Open loop Rx wafer test" }
![fig_test_rx]
[fig_test_rx]: images/LB_Spec/Slide3a.png { width:auto; max-width:100% }
~

In bidirectional links, loopback tests can be implemented in several modes:

 * slice-to-slice short loopback 
  * Data is looped back within the chip
 from a Tx slice to an Rx slice using on-chip switching (shown in Figure [#fig_test_sl]). 
 The short loopback path is configured by the ATE using implementation-dependent registers.
  * Loopback can be implemented before the PHY serializer, between the serializer and the output buffer, 
  and/or at the bumps. 
 * intra-slice short loopback
  * A single slice containing both Rx and Tx paths sharing the same bumps
 can perform on-chip loopback testing simply by turning on both the Rx and Tx paths at once.
 This has more on-chip circuitry, but allows loopback testing with no switches or extra 
 lines connected to the bumps other than the Tx driver tristate switches. 
 Figure [#fig_test_sl] applies, except there is only one shared set of bumps for a Tx/Rx slice.
 * long loopback 
  * the PRBS pattern is generated by chiplet-A, sent over the replica channel on the ATE 
  load board which loops it back 
 (shown in Figure [#fig_test_ll]). 
 The received pattern will be passed to a bit error rate tester (BERT) to analyze the 
 performance of the link with off-chip data and clock wires.


~ Figure { #fig_test_sl; caption: "Short loopback testing" }
![fig_test_sl]
[fig_test_sl]: images/LB_Spec/Slide4.png { width:auto; max-width:60% }
~

~ Figure { #fig_test_ll; caption: "Long loopback testing" }
![fig_test_ll]
[fig_test_ll]: images/LB_Spec/Slide1a.png { width:auto; max-width:60% }
~

Both loopback modes can potentially be used for in-field validation bring-up and test. 
Cooperation across chiplets will be required to execute these tests in the field. 
Open-loop testing requires the use of a fixed test pattern recognized by both ends and 
is the only option for unidirectional links. 
Long loopback mode can be implemented on interposer or organic laminate for 
validation/verification purposes. 

Figure [#fig_test_cll] shows how a long loopback mode is executed across two chiplets 
for in-field validation and test 
where Tx and Rx are in different chiplets. Furthermore, this configuration can be expanded 
to loop back the data from the transmitter of chiplet-A to the receiver of chiplet-A. 


~ Figure { #fig_test_cll; caption: "Chiplet-to-chiplet long loopback" }
![fig_test_cll]
[fig_test_cll]: images/LB_Spec/Fig5.png { width:auto; max-width:80% }
~





